{"version":3,"sources":["img/profile.png","Components/Base.js","Components/MainNav.js","Components/Bio.js","Components/Home.js","Components/Contact.js","serviceWorker.js","index.js"],"names":["module","exports","Base","props","state","Container","fluid","this","children","Component","MainNav","Navbar","className","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Bio","Home","src","profile","alt","Contact","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","component","rel","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,0PCsB5BC,E,YAjBX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAM,GAFG,E,sEAQd,OACI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACXC,KAAKJ,MAAMK,c,GAXTC,a,wBCmBJC,G,uLAhBP,OACI,kBAACC,EAAA,EAAD,CAAQC,UAAU,UAAWC,OAAO,MAClC,kBAACF,EAAA,EAAOG,MAAR,CAAcF,UAAU,WAAWG,KAAK,KAAxC,OACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKR,UAAU,yBACb,kBAACQ,EAAA,EAAIC,KAAL,CAAUT,UAAU,YAAYG,KAAK,KAArC,QACA,kBAACK,EAAA,EAAIC,KAAL,CAAUT,UAAU,YAAYG,KAAK,YAArC,kB,GAVIN,cCiBPa,G,uLATP,OACI,yBAAKV,UAAU,6BACX,uBAAGA,UAAU,2CAAb,YACA,uBAAGA,UAAU,cAAb,wV,GANEH,c,iBCqBHc,E,iLApBP,OACI,yBAAKX,UAAU,sBACX,yBAAKA,UAAU,gBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,yBAAMY,IAAKC,IAASC,IAAI,oBAGhC,0BAAMd,UAAU,yBAAhB,iBACA,0BAAMA,UAAU,4BAAhB,0BAEJ,kBAAC,EAAD,W,GAfGH,aCMJkB,E,iLARP,OACI,4C,GAJUlB,a,sBCUFmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCJNC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,WAAWC,UAAWV,KAGtC,0BAAMZ,KAAK,iEAAiEuB,IAAI,iBAGtFC,SAASC,eAAe,SDwGxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b554bc5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.3ba7f595.png\";","import React, {Component} from 'react';\nimport Container from 'react-bootstrap/Container';\n// import MainNav from \"./MainNav\";\n\nclass Base extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n        }\n\n    }\n\n    render(){\n        return(\n            <Container fluid>\n                {this.props.children}\n            </Container>\n\n        );\n    }\n}\n\nexport default Base;\n","import React, {Component} from 'react';\nimport {Navbar,Nav} from 'react-bootstrap';\nimport \"../Css/MainNav.css\";\n\nclass MainNav extends Component{\n\n    render(){\n        return (\n            <Navbar className=\"top-nav\"  expand=\"lg\">\n              <Navbar.Brand className=\"initials\" href=\"/\">I.C</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto top-nav-links\">\n                  <Nav.Link className=\"top-links\" href=\"/\">Home</Nav.Link>\n                  <Nav.Link className=\"top-links\" href=\"/contact\">Contact</Nav.Link>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n\n}\n\nexport default MainNav;\n","import React, {Component} from 'react';\nimport \"../Css/Bio.css\";\n\n// <blockquote cite=\"https://www.goodreads.com/quotes/660272-there-is-nothing-like-a-dream-to-create-the-future\">\n//     <p>There is nothing like a dream to create the future.</p>\n//     <footer>—Victor Hugo, Les Misérables</footer>\n// </blockquote>\n//\n\nclass Bio extends Component{\n\n    render(){\n        return(\n            <div className=\"bio-wrapper d-flex col-12\">\n                <p className=\"bio-title justify-content-center d-flex\">About Me</p>\n                <p className=\"bio d-flex\">I live for challenges, finding new ways to impove on my ablitlies , and designing impressive applications visually as well as structurally. When I'm not working on code I love to explore greenville with my wife. I love waking up early for the gym, it's my way of starting the day. I help lead the worship team for my church in Taylors.</p>\n            </div>\n        );\n    }\n}\n\nexport default Bio;\n","import React, {Component} from 'react';\nimport \"../Css/Home.css\";\nimport MainNav from \"./MainNav\";\nimport Bio from \"./Bio\";\nimport profile from \"../img/profile.png\";\n\n\nclass Home extends Component{\n\n    render(){\n        return(\n            <div className=\"home-page-div row \">\n                <div className=\"intro col-12\">\n                    <MainNav/>\n                    <div className=\"img-div d-flex\">\n                        <div className=\"img-warp d-flex\">\n                            <img  src={profile} alt=\"Isaiah Carter\"/>\n                        </div>\n                    </div>\n                    <span className=\"homepage-title d-flex\">Isaiah Carter</span>\n                    <span className=\"homepage-position d-flex\"> Full Stack Developer</span>\n                </div>\n                <Bio/>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Home;\n","import React, {Component} from 'react';\n\nclass Contact extends Component{\n\n    render(){\n        return(\n            <div>\n            contact\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Base from \"./Components/Base\";\nimport Home from \"./Components/Home\";\nimport Contact from \"./Components/Contact\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <Base>\n            <Switch>\n                <Route exact path=\"/\" component={Home}/>\n                <Route path=\"/contact\" component={Contact}/>\n\n            </Switch>\n            <link href=\"https://fonts.googleapis.com/css?family=Bevan|Rye&display=swap\" rel=\"stylesheet\"/>\n        </Base>\n    </Router>\n    , document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}